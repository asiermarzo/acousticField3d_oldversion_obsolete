/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package acousticfield3d.gui.specific;

import acousticfield3d.gui.MainForm;
import acousticfield3d.math.FastMath;
import acousticfield3d.math.Vector3f;
import acousticfield3d.scene.Scene;
import acousticfield3d.simulation.Transducer;
import acousticfield3d.utils.FileUtils;
import acousticfield3d.utils.ImagesUtils;
import acousticfield3d.utils.Parse;
import java.util.ArrayList;

/**
 *
 * @author am14010
 */
public class Knots extends javax.swing.JFrame {
    final MainForm mf;
    
    public Knots(MainForm mf) {
        this.mf = mf;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phaseAmpGroup = new javax.swing.ButtonGroup();
        colorGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        radiousText = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        phaseRadio = new javax.swing.JRadioButton();
        ampRadious = new javax.swing.JRadioButton();
        hueRadious = new javax.swing.JRadioButton();
        greyRadious = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        imageText = new javax.swing.JTextField();
        selectButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Transducers make circle:");

        jLabel2.setText("radious");

        radiousText.setText("0.1");

        deleteButton.setText("Delete Rest");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Load from Image");

        phaseAmpGroup.add(phaseRadio);
        phaseRadio.setSelected(true);
        phaseRadio.setText("Phase");

        phaseAmpGroup.add(ampRadious);
        ampRadious.setText("Amplitude");

        colorGroup.add(hueRadious);
        hueRadious.setSelected(true);
        hueRadious.setText("Hue");

        colorGroup.add(greyRadious);
        greyRadious.setText("Grey");

        jLabel4.setText("Image location:");

        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imageText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiousText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(phaseRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ampRadious)
                                .addGap(18, 18, 18)
                                .addComponent(hueRadious)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(greyRadious))
                            .addComponent(applyButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(radiousText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phaseRadio)
                    .addComponent(ampRadious)
                    .addComponent(hueRadious)
                    .addComponent(greyRadious))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(imageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectButton))
                .addGap(18, 18, 18)
                .addComponent(applyButton)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        final float radious = Parse.stringToFloat( radiousText.getText() );
        
        final Vector3f center = new Vector3f();
        final Vector3f dim = new Vector3f();
        
        final ArrayList<Transducer> transducers = mf.simulation.transducers;
        Scene.getCenterAndDimOfEntities( transducers, center, dim);
        
        final ArrayList<Transducer> toDelete = new ArrayList<Transducer>();
        for(Transducer t : transducers){
            final float dist = center.distance( t.getTransform().getTranslation() );
            if (dist > radious){
                toDelete.add( t );
            }
        }
        
        mf.transPanel.deleteTransducers(toDelete);
        
        mf.needUpdate();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        String file = FileUtils.selectFile(rootPane, "open", "", null);
        if (file != null){
            imageText.setText( file );
        }
    }//GEN-LAST:event_selectButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        boolean phaseOrAmp = phaseRadio.isSelected();
        boolean hueOrGrey = hueRadious.isSelected();
        
        final Vector3f center = new Vector3f();
        final Vector3f dim = new Vector3f();
        final ArrayList<Transducer> transducers = mf.simulation.transducers;
        Scene.getCenterAndDimOfEntities(transducers, center, dim);
        
        final float[][] values = ImagesUtils.mapMatrix( ImagesUtils.getARGB( imageText.getText()) , hueOrGrey);
        final int w = values.length - 1;
        final int h = values[0].length - 1;
                
        for(Transducer t : transducers){
            final Vector3f pos = t.getTransform().getTranslation();
            
            final int px = Math.round( ((pos.x - center.x) / dim.x +0.5f) * w );
            final int py = Math.round( ((pos.z - center.z) / dim.z +0.5f) * h );
            
            final float value = values[px][py];
            
            if (phaseOrAmp){
                t.setPhase( value * FastMath.PI * 2f);
            }else{
                t.setPAmplitude( value );
            }
        }
        
        mf.needUpdate();
    }//GEN-LAST:event_applyButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ampRadious;
    private javax.swing.JButton applyButton;
    private javax.swing.ButtonGroup colorGroup;
    private javax.swing.JButton deleteButton;
    private javax.swing.JRadioButton greyRadious;
    private javax.swing.JRadioButton hueRadious;
    private javax.swing.JTextField imageText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.ButtonGroup phaseAmpGroup;
    private javax.swing.JRadioButton phaseRadio;
    private javax.swing.JTextField radiousText;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
