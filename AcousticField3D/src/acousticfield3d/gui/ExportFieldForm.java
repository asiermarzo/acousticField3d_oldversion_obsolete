/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package acousticfield3d.gui;

import acousticfield3d.algorithms.CachedPointFieldCalc;
import acousticfield3d.math.Vector2f;
import acousticfield3d.math.Vector3f;
import acousticfield3d.utils.Parse;

/**
 *
 * @author Asier
 */
public class ExportFieldForm extends javax.swing.JFrame {
    MainForm mf; 
    
    public final static String SEPARATOR = "\t";
    
    public ExportFieldForm(MainForm mf) {
        this.mf = mf;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        axesGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        distanceText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        stepsText = new javax.swing.JTextField();
        exportButton = new javax.swing.JButton();
        directivityCheck = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        ampCheck = new javax.swing.JCheckBox();
        phaseCheck = new javax.swing.JCheckBox();
        gorCheck = new javax.swing.JCheckBox();
        fxCheck = new javax.swing.JCheckBox();
        fyCheck = new javax.swing.JCheckBox();
        fzCheck = new javax.swing.JCheckBox();
        lapCheck = new javax.swing.JCheckBox();
        lxCheck = new javax.swing.JCheckBox();
        lyCheck = new javax.swing.JCheckBox();
        lzCheck = new javax.swing.JCheckBox();
        xCheck = new javax.swing.JRadioButton();
        yCheck = new javax.swing.JRadioButton();
        zCheck = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Field");

        jLabel1.setText("Distance:");

        distanceText.setText("0.0005");

        jLabel2.setText("Steps:");

        stepsText.setText("30");

        exportButton.setText("Calc");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        directivityCheck.setText("Directivity");

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        ampCheck.setText("Amp");

        phaseCheck.setText("Phase");

        gorCheck.setText("gor");

        fxCheck.setSelected(true);
        fxCheck.setText("fx");

        fyCheck.setText("fy");

        fzCheck.setText("fz");

        lapCheck.setText("lap");

        lxCheck.setText("lx");

        lyCheck.setText("ly");

        lzCheck.setText("lz");

        axesGroup.add(xCheck);
        xCheck.setSelected(true);
        xCheck.setText("X");

        axesGroup.add(yCheck);
        yCheck.setText("Y");

        axesGroup.add(zCheck);
        zCheck.setText("Z");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(distanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stepsText))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(exportButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directivityCheck)
                                .addGap(18, 18, 18)
                                .addComponent(xCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ampCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phaseCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gorCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fxCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fyCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fzCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lapCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lxCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lyCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lzCheck)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(distanceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(stepsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportButton)
                    .addComponent(directivityCheck)
                    .addComponent(xCheck)
                    .addComponent(yCheck)
                    .addComponent(zCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ampCheck)
                    .addComponent(phaseCheck)
                    .addComponent(gorCheck)
                    .addComponent(fxCheck)
                    .addComponent(fyCheck)
                    .addComponent(fzCheck)
                    .addComponent(lapCheck)
                    .addComponent(lxCheck)
                    .addComponent(lyCheck)
                    .addComponent(lzCheck))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportPoints(CachedPointFieldCalc cp, StringBuilder sb, int steps, Vector3f inc){
        for(int i = 0; i < steps; ++i){
            cp.initFieldConstants(mf.renderer);
            cp.updateGorkovLaplacian(mf.simulation.getTransPhasesAsArray());
            cp.updateGorkovGradient(mf.simulation.getTransPhasesAsArray());
            cp.updatePressure(mf.simulation.getTransPhasesAsArray());

            Vector2f field = new Vector2f();
            cp.evalField(field);

            Vector3f g = new Vector3f();
            g.x = (float) -cp.evalGorkovGradientX();
            g.y = (float) -cp.evalGorkovGradientY();
            g.z = (float) -cp.evalGorkovGradientZ();
            float gor = (float) cp.evalGorkov();

            float laplacianG = (float) cp.evalGorkovLaplacian();
            Vector3f l = new Vector3f();
            l.x = (float) cp.evalGorkovLaplacianX();
            l.y = (float) cp.evalGorkovLaplacianY();
            l.z = (float) cp.evalGorkovLaplacianZ();
                 
            Vector3f p = cp.getPosition();
            
        if (xCheck.isSelected()){
             sb.append( p.x + SEPARATOR);
        }else if(yCheck.isSelected()){
            sb.append( p.y + SEPARATOR );
        }else if(zCheck.isSelected()){
            sb.append( p.z + SEPARATOR);
        }
      
        if (ampCheck.isSelected()){
              sb.append( field.length() + SEPARATOR);
        }
        if(phaseCheck.isSelected()){
             sb.append( field.getAngle() + SEPARATOR);
        }
       
        if(gorCheck.isSelected()){
            sb.append( gor + SEPARATOR);
        }
        if(fxCheck.isSelected()){
            sb.append(g.x + SEPARATOR);
        }
        if(fyCheck.isSelected()){
            sb.append( g.y + SEPARATOR);
        }
        if(fzCheck.isSelected()){
            sb.append( g.z + SEPARATOR);
        }
        
        if(lapCheck.isSelected()){
            sb.append( laplacianG + SEPARATOR );
        }
        if(lxCheck.isSelected()){
            sb.append( l.x + SEPARATOR );
        }
        if(lyCheck.isSelected()){
            sb.append( l.y + SEPARATOR );
        }
        if(lzCheck.isSelected()){
            sb.append( l.z + SEPARATOR);
        }
        sb.append("\n");
        
            cp.getPosition().addLocal(inc);
        }
    }
    
    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        StringBuilder sb = new StringBuilder();
        
        final int steps = Parse.stringToInt(stepsText.getText());
        final float dist = Parse.stringToFloat( distanceText.getText() );
        
        //get the first selected object position
        if ( mf.selection.isEmpty() ) { return; }
        final Vector3f p = new Vector3f( mf.selection.get(0).getTransform().getTranslation() );
        
        //create a cached point
        CachedPointFieldCalc cachedPoint;
        //final boolean directivity = !mf.miscPanel.isAnalyticalNoDirShaders();
        final boolean directivity = directivityCheck.isSelected();
        final float h = mf.simPanel.getWaveLength() / mf.miscPanel.getFiniteDiffH();
        cachedPoint = new CachedPointFieldCalc(Vector3f.ZERO, false, directivity, h, mf.renderer);
        cachedPoint.allocate(mf.renderer);

        Vector3f inc = new Vector3f();
        cachedPoint.getPosition().set(p);
        if (xCheck.isSelected()){
            sb.append("x" + SEPARATOR);
            cachedPoint.getPosition().x -= dist * steps;
            inc.set(dist, 0, 0);
        }else if(yCheck.isSelected()){
            sb.append("y" + SEPARATOR);
            cachedPoint.getPosition().y -= dist * steps;
            inc.set(0, dist, 0);
        }else if(zCheck.isSelected()){
            sb.append("z" + SEPARATOR);
            cachedPoint.getPosition().z -= dist * steps;
            inc.set(0, 0, dist);
        }
      
        if (ampCheck.isSelected()){
             sb.append("amp" + SEPARATOR);
        }
        if(phaseCheck.isSelected()){
             sb.append("phase" + SEPARATOR);
        }
       
        if(gorCheck.isSelected()){
            sb.append("gorkov" + SEPARATOR);
        }
        if(fxCheck.isSelected()){
            sb.append("fx" + SEPARATOR);
        }
        if(fyCheck.isSelected()){
            sb.append("fy" + SEPARATOR);
        }
        if(fzCheck.isSelected()){
            sb.append("fz" + SEPARATOR);
        }
        
        if(lapCheck.isSelected()){
            sb.append("laplacian" + SEPARATOR);
        }
        if(lxCheck.isSelected()){
            sb.append("lx" + SEPARATOR);
        }
        if(lyCheck.isSelected()){
            sb.append("ly" + SEPARATOR);
        }
        if(lzCheck.isSelected()){
            sb.append("lz");
        }
        sb.append("\n");
      
        //export
        exportPoints(cachedPoint, sb, steps * 2, inc);
        
        
        area.setText( sb.toString() );
    }//GEN-LAST:event_exportButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ampCheck;
    private javax.swing.JTextArea area;
    private javax.swing.ButtonGroup axesGroup;
    private javax.swing.JCheckBox directivityCheck;
    private javax.swing.JTextField distanceText;
    private javax.swing.JButton exportButton;
    private javax.swing.JCheckBox fxCheck;
    private javax.swing.JCheckBox fyCheck;
    private javax.swing.JCheckBox fzCheck;
    private javax.swing.JCheckBox gorCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox lapCheck;
    private javax.swing.JCheckBox lxCheck;
    private javax.swing.JCheckBox lyCheck;
    private javax.swing.JCheckBox lzCheck;
    private javax.swing.JCheckBox phaseCheck;
    private javax.swing.JTextField stepsText;
    private javax.swing.JRadioButton xCheck;
    private javax.swing.JRadioButton yCheck;
    private javax.swing.JRadioButton zCheck;
    // End of variables declaration//GEN-END:variables
}
