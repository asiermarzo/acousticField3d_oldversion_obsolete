/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package acousticfield3d.gui;

import acousticfield3d.math.Vector3f;
import acousticfield3d.scene.Entity;
import acousticfield3d.scene.MeshEntity;
import acousticfield3d.simulation.Animation;
import acousticfield3d.utils.Parse;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

/**
 *
 * @author Asier
 */
public class PredicPositionsFrame extends javax.swing.JFrame {
    private final MainForm mf;
    
    public PredicPositionsFrame(MainForm form) {
        this.mf = form;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calcPointsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        preText = new javax.swing.JTextField();
        postText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        steps1Text = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        calcErrorsButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        timeText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        steps2Text = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        centerText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Predict Positions");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        calcPointsButton.setText("Calc points");
        calcPointsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcPointsButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("PreOffset:");

        preText.setText("0.0 0.0 0.0");

        postText.setText("0.0 0.0 0.0");

        jLabel2.setText("PostOffset:");

        jLabel3.setText("steps:");

        steps1Text.setText("20");

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        calcErrorsButton.setText("Calc Errors");
        calcErrorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcErrorsButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("time:");

        timeText.setText("1");

        jLabel5.setText("X");

        steps2Text.setText("20");

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Center");

        centerText.setText("0.0 0.0 0.0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preText)
                            .addComponent(postText)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(steps1Text, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(steps2Text, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 71, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calcPointsButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calcErrorsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(centerText)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(preText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(postText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(steps1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(steps2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcPointsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calcErrorsButton)
                    .addComponent(clearButton)
                    .addComponent(jLabel6)
                    .addComponent(centerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void calcPointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcPointsButtonActionPerformed
        final Vector3f preOffset = new Vector3f().parse(preText.getText());
        final Vector3f postOffset = new Vector3f().parse(postText.getText());
        final int step1 = Parse.stringToInt(steps1Text.getText());
        final int step2 = Parse.stringToInt(steps2Text.getText());
        final float time = Parse.stringToFloat(timeText.getText());
        
        /*gather points from anim0
         order by number*/
        final Animation anim0 = mf.animPanel.getCurrentAnimation();
        final ArrayList<MeshEntity> cps = anim0.getControlPoints();
        Collections.sort(cps, new Comparator<MeshEntity>() {
            @Override
            public int compare(MeshEntity o1, MeshEntity o2) {
                return Integer.compare(o1.getNumber(), o2.getNumber());
            }
        });

        //create and add new animation
        final Animation newAnim = mf.animPanel.createNewAnimation(anim0.getName() + "phys");
        mf.simulation.animations.add(newAnim);

        int index = 0;
        //for each point 
        for (MeshEntity bead : cps) {
            //area.append(index + " ");
            index++;
            
            //create a bead there and insert it in anim2
            final Vector3f pos = bead.getTransform().getTranslation();
            MeshEntity newBead = mf.cpPanel.createControlPoint(pos.x, pos.y, pos.z, 0, bead.getNumber(), true);
            newAnim.getControlPoints().add(newBead);
            newBead.getTransform().set(bead.getTransform());

            //select the bead
            mf.setSelection( newBead );
            
            //calcAlgorithm
            mf.algorithmsForm.runBFGS(false, true);

            //apply pre-offset
            newBead.getTransform().getTranslation().addLocal(preOffset);

            //apply physics
            mf.physicsPanel.simulateForBead(newBead, step1, step2, time);
            
            //apply post-offset
            newBead.getTransform().getTranslation().addLocal(postOffset);
        }
    }//GEN-LAST:event_calcPointsButtonActionPerformed

    private void calcErrorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcErrorsButtonActionPerformed
        //generate errors (anim1, anim2)
	final Animation[] anims = mf.animPanel.getSelectedAnimations();
        if (anims.length != 2){ return;}
        
        final ArrayList<MeshEntity> pReal = anims[0].getControlPoints();
        final ArrayList<MeshEntity> pSim = anims[1].getControlPoints();
        final Comparator<MeshEntity> comp = new Comparator<MeshEntity>() {
            @Override
            public int compare(MeshEntity o1, MeshEntity o2) {
                return Integer.compare(o1.getNumber(), o2.getNumber());
            }
        };
        
        Collections.sort(pReal, comp);
        Collections.sort(pSim, comp);
        final int l = Math.min(pReal.size(), pSim.size());
        final Vector3f center = new Vector3f().parse(centerText.getText());
        
        for(int i = 0; i < l; ++i){
            //real X Y Z T, sim X Y Z T, dist X Y Z T 
            final Vector3f real = pReal.get(i).getTransform().getTranslation();
            final Vector3f sim = pSim.get(i).getTransform().getTranslation();
            final Vector3f diff = real.subtract( sim );
            
            area.append(real.toStringSimpleWithTabs() + "\t" + real.distance(center) + "\t");
            area.append(sim.toStringSimpleWithTabs() + "\t" + sim.distance(center) + "\t");
            area.append(diff.toStringSimpleWithTabs() + "\t" + diff.length() + "\n");
        }
                       
    }//GEN-LAST:event_calcErrorsButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        area.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton calcErrorsButton;
    private javax.swing.JButton calcPointsButton;
    private javax.swing.JTextField centerText;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField postText;
    private javax.swing.JTextField preText;
    private javax.swing.JTextField steps1Text;
    private javax.swing.JTextField steps2Text;
    private javax.swing.JTextField timeText;
    // End of variables declaration//GEN-END:variables
}
