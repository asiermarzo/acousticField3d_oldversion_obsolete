/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package acousticfield3d.gui.panels;

import acousticfield3d.gui.MainForm;
import acousticfield3d.gui.controls.SliderPanel;
import acousticfield3d.scene.Entity;
import acousticfield3d.scene.Resources;
import acousticfield3d.scene.Scene;
import acousticfield3d.utils.Parse;

/**
 *
 * @author Asier
 */
public class RtIsoPanel extends javax.swing.JPanel {
    public MainForm mf;
    
    SliderPanel rtIsoSliderPanel;
    
    public RtIsoPanel(MainForm mf) {
        this.mf = mf;
        rtIsoSliderPanel = new SliderPanel(2, false);
 
        initComponents();
    }

    public float getRtIsoAmpScale() {
        return Parse.stringToFloat( rtIsoAmpScaleText.getText());
    }

    public float getRtIsoDensity() {
        return Parse.stringToFloat( rtIsoDensityText.getText());
    }

    public float getRtIsoMaxAlpha() {
        return Parse.stringToFloat( rtIsoAlphaText.getText());
    }

    public float getRtMinIsoValue() {
        return Parse.stringToFloat( currentMinRTIsoText.getText() );
    }
    public float getRtMaxIsoValue() {
        return Parse.stringToFloat( currentMaxRTIsoText.getText() );
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rtIsoCheck = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        rtIsoAlphaText = new javax.swing.JTextField();
        simToRTIsoButton = new javax.swing.JButton();
        rtIsoToCubeButton = new javax.swing.JButton();
        rtIsoDensityText = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        rtIsoAmpScaleText = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        minRTIsoText = new javax.swing.JTextField();
        maxRTIsoText = new javax.swing.JTextField();
        currentMinRTIsoText = new javax.swing.JLabel();
        rtIsoPabel = rtIsoSliderPanel;
        currentMaxRTIsoText = new javax.swing.JLabel();
        rtIsoCalcCheck = new javax.swing.JCheckBox();
        ampCheck = new javax.swing.JRadioButton();
        phaseCheck = new javax.swing.JRadioButton();
        gorkCheck = new javax.swing.JRadioButton();
        tampCheck = new javax.swing.JRadioButton();

        rtIsoCheck.setText("Enable");
        rtIsoCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtIsoCheckActionPerformed(evt);
            }
        });

        jLabel29.setText("Alpha:");

        rtIsoAlphaText.setText("0.8");

        simToRTIsoButton.setText("c=s");
        simToRTIsoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simToRTIsoButtonActionPerformed(evt);
            }
        });

        rtIsoToCubeButton.setText("s=c");
        rtIsoToCubeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtIsoToCubeButtonActionPerformed(evt);
            }
        });

        rtIsoDensityText.setText("128");

        jLabel30.setText("Density:");

        rtIsoAmpScaleText.setText("1500");
        rtIsoAmpScaleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtIsoAmpScaleTextActionPerformed(evt);
            }
        });

        jLabel31.setText("AmpS:");

        minRTIsoText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        minRTIsoText.setText("0");
        minRTIsoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRTIsoTextActionPerformed(evt);
            }
        });

        maxRTIsoText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        maxRTIsoText.setText("2000");

        currentMinRTIsoText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentMinRTIsoText.setText("1000");

        rtIsoPabel.setBackground(new java.awt.Color(255, 255, 255));
        rtIsoPabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rtIsoPabelMouseDragged(evt);
            }
        });
        rtIsoPabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rtIsoPabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rtIsoPabelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout rtIsoPabelLayout = new javax.swing.GroupLayout(rtIsoPabel);
        rtIsoPabel.setLayout(rtIsoPabelLayout);
        rtIsoPabelLayout.setHorizontalGroup(
            rtIsoPabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rtIsoPabelLayout.setVerticalGroup(
            rtIsoPabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        currentMaxRTIsoText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentMaxRTIsoText.setText("1500");

        rtIsoCalcCheck.setSelected(true);
        rtIsoCalcCheck.setText("calc");
        rtIsoCalcCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtIsoCalcCheckActionPerformed(evt);
            }
        });

        buttonGroup1.add(ampCheck);
        ampCheck.setSelected(true);
        ampCheck.setText("amp");
        ampCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ampCheckActionPerformed(evt);
            }
        });

        buttonGroup1.add(phaseCheck);
        phaseCheck.setText("pha");
        phaseCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phaseCheckActionPerformed(evt);
            }
        });

        buttonGroup1.add(gorkCheck);
        gorkCheck.setText("gork");
        gorkCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gorkCheckActionPerformed(evt);
            }
        });

        buttonGroup1.add(tampCheck);
        tampCheck.setText("tamp");
        tampCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tampCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rtIsoPabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minRTIsoText, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxRTIsoText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rtIsoCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(simToRTIsoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rtIsoToCubeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentMinRTIsoText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentMaxRTIsoText, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ampCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phaseCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gorkCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tampCheck))
                            .addComponent(rtIsoCalcCheck)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel29)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rtIsoAlphaText))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rtIsoAmpScaleText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel30)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rtIsoDensityText, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minRTIsoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxRTIsoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rtIsoPabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentMinRTIsoText)
                    .addComponent(currentMaxRTIsoText))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(rtIsoAmpScaleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(rtIsoDensityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(rtIsoAlphaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(simToRTIsoButton)
                        .addComponent(rtIsoToCubeButton))
                    .addComponent(rtIsoCheck))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ampCheck)
                    .addComponent(phaseCheck)
                    .addComponent(gorkCheck)
                    .addComponent(tampCheck))
                .addGap(7, 7, 7)
                .addComponent(rtIsoCalcCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rtIsoCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtIsoCheckActionPerformed
        Scene.setVisible(mf.scene.getEntities(), Entity.TAG_RT_ISO, rtIsoCheck.isSelected());
        mf.needUpdate();
    }//GEN-LAST:event_rtIsoCheckActionPerformed

    private void simToRTIsoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simToRTIsoButtonActionPerformed
        mf.scene.simToCube(mf.scene.getRtIsoVol(), mf.simulation );
        mf.needUpdate();
    }//GEN-LAST:event_simToRTIsoButtonActionPerformed

    private void rtIsoToCubeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtIsoToCubeButtonActionPerformed
        mf.scene.cubeToSim( mf.scene.getRtIsoVol(), mf.simulation);
        mf.scene.updateBoundaryBoxes(mf.simulation);
        mf.needUpdate();
    }//GEN-LAST:event_rtIsoToCubeButtonActionPerformed

    private void rtIsoAmpScaleTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtIsoAmpScaleTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rtIsoAmpScaleTextActionPerformed

    private void rtIsoPabelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtIsoPabelMouseDragged
        rtIsoSliderPanel.touchDrag(evt.getX(), evt.getY());
        float min = Parse.stringToFloat( minRTIsoText.getText() );
        float max = Parse.stringToFloat( maxRTIsoText.getText() );
        float current = min + (max-min) * rtIsoSliderPanel.getCurrent();
        if ( rtIsoSliderPanel.getLastButton() == 0){
            currentMinRTIsoText.setText( mf.decimalFormat2.format(current) );
        }else{
            currentMaxRTIsoText.setText( mf.decimalFormat2.format(current) );
        }
        mf.needUpdate();
    }//GEN-LAST:event_rtIsoPabelMouseDragged

    private void rtIsoPabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtIsoPabelMousePressed

        rtIsoSliderPanel.touchDown(evt.getX(), evt.getY(), evt.getButton() == 1 ? 0 : 1);
        rtIsoPabelMouseDragged(evt);
    }//GEN-LAST:event_rtIsoPabelMousePressed

    private void rtIsoPabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtIsoPabelMouseReleased

    }//GEN-LAST:event_rtIsoPabelMouseReleased

    private void rtIsoCalcCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtIsoCalcCheckActionPerformed
        Scene.setShader(mf.scene.getEntities(), Entity.TAG_RT_ISO,
            rtIsoCalcCheck.isSelected() ? getShader() : Resources.SHADER_SOLID_SPEC);
        mf.needUpdate();
    }//GEN-LAST:event_rtIsoCalcCheckActionPerformed

    private int getShader(){
        if (ampCheck.isSelected()){
            return Resources.SHADER_ISO_RT_AMP;
        }else if (phaseCheck.isSelected()){
            return Resources.SHADER_ISO_RT_PHASE;
        }else if (gorkCheck.isSelected()){
            return Resources.SHADER_ISO_RT_GORKOV;
        }else if (tampCheck.isSelected()){
            return Resources.SHADER_ISO_RT_TAMP;
        }
        
        return Resources.SHADER_ISO_RT_AMP;
    }
    
    private void updateIsoShader(){
        mf.getScene().getRtIsoVol().setShader( getShader() );
        mf.needUpdate();
    }
    private void minRTIsoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRTIsoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minRTIsoTextActionPerformed

    private void gorkCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gorkCheckActionPerformed
        updateIsoShader();
    }//GEN-LAST:event_gorkCheckActionPerformed

    private void phaseCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phaseCheckActionPerformed
        updateIsoShader();
    }//GEN-LAST:event_phaseCheckActionPerformed

    private void ampCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ampCheckActionPerformed
        updateIsoShader();
    }//GEN-LAST:event_ampCheckActionPerformed

    private void tampCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tampCheckActionPerformed
        updateIsoShader();
    }//GEN-LAST:event_tampCheckActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ampCheck;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel currentMaxRTIsoText;
    private javax.swing.JLabel currentMinRTIsoText;
    private javax.swing.JRadioButton gorkCheck;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JTextField maxRTIsoText;
    private javax.swing.JTextField minRTIsoText;
    private javax.swing.JRadioButton phaseCheck;
    private javax.swing.JTextField rtIsoAlphaText;
    private javax.swing.JTextField rtIsoAmpScaleText;
    private javax.swing.JCheckBox rtIsoCalcCheck;
    private javax.swing.JCheckBox rtIsoCheck;
    private javax.swing.JTextField rtIsoDensityText;
    private javax.swing.JPanel rtIsoPabel;
    private javax.swing.JButton rtIsoToCubeButton;
    private javax.swing.JButton simToRTIsoButton;
    private javax.swing.JRadioButton tampCheck;
    // End of variables declaration//GEN-END:variables
}
